# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest  # Runs on GitHub-hosted runner

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🛠️ Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: 🔑 Configure Kubeconfig
        run: |
          mkdir -p $HOME/.kube  # Ensure .kube directory exists
          echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config  # Secure permissions
          
          export KUBECONFIG=$HOME/.kube/config  # Explicitly set kubeconfig

          # ✅ Debug: Print Kubeconfig Contents
          echo "🔍 Debug: Kubeconfig File Contents:"
          cat $HOME/.kube/config

          # ✅ Debug: Show available contexts
          echo "🔍 Debug: Available Kubernetes Contexts:"
          kubectl config get-contexts

          # ✅ Debug: Show current context
          echo "🔍 Debug: Current Context:"
          kubectl config current-context

        env:
          KUBECONFIG: $HOME/.kube/config

      - name: 🔑 Configure CA Certificate (if available)
        run: |
          if [[ -n "${{ secrets.K8S_CA_CERT }}" ]]; then
            echo "✅ Found CA Certificate, applying to kubeconfig..."
            echo "${{ secrets.K8S_CA_CERT }}" | base64 --decode > $HOME/.kube/ca.crt
            kubectl config set clusters.my-cluster.certificate-authority $HOME/.kube/ca.crt
          else
            echo "⚠️ No CA certificate found in secrets. Using default kubeconfig settings."
          fi

        env:
          KUBECONFIG: $HOME/.kube/config

      - name: 🚀 Verify Kubernetes Connection
        run: |
          export KUBECONFIG=$HOME/.kube/config

          # ✅ Debug: Check Cluster Info
          echo "🔍 Debug: Checking Cluster Info..."
          kubectl cluster-info || echo "❌ Failed to fetch cluster info"

          # ✅ Debug: Check Nodes
          echo "🔍 Debug: Checking Nodes..."
          kubectl get nodes || echo "❌ Failed to fetch nodes"

          # ✅ Debug: Check Namespaces
          echo "🔍 Debug: Checking Namespaces..."
          kubectl get ns || echo "❌ Failed to fetch namespaces"

        env:
          KUBECONFIG: $HOME/.kube/config

      - name: ⚠️ Temporary Fix
        if: failure()
        run: |
          export KUBECONFIG=$HOME/.kube/config
          echo "⚠️ Enabling --insecure-skip-tls-verify due to certificate issues."
          kubectl config set-cluster my-cluster --insecure-skip-tls-verify=true

          # ✅ Re-run cluster check
          kubectl cluster-info
          kubectl get nodes
          kubectl get ns

        env:
          KUBECONFIG: $HOME/.kube/config
